<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wsk.life.dao.CommentCriticMapper">
    <resultMap id="BaseResultMap" type="com.wsk.life.domain.CommentCritic">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="good" property="good" jdbcType="INTEGER"/>
        <result column="pid" property="pid" jdbcType="INTEGER"/>
        <result column="time" property="time" jdbcType="TIMESTAMP"/>
        <result column="uid" property="uid" jdbcType="INTEGER"/>
        <result column="modified" property="modified" jdbcType="TIMESTAMP"/>
        <result column="allow" property="allow" jdbcType="SMALLINT"/>
        <result column="critic" property="critic" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="table">
        commentcritic
    </sql>

    <!--<resultMap id="ResultMapWithBLOBs" type="com.wsk.life.pojo.CommentCritic" extends="BaseResultMap" >-->
    <!--<result column="critic" property="critic" jdbcType="LONGVARCHAR" />-->
    <!--</resultMap>-->
    <sql id="all">
        id, good, pid, time, uid, modified, allow, critic
    </sql>
    <!--<sql id="Blob_Column_List" >-->
    <!--critic-->
    <!--</sql>-->
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="all"/>
        from
        <include refid="table"/>
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="getCommentByPid" resultMap="BaseResultMap">
        select
        <include refid="all"/>
        from
        <include refid="table"/>
        where pid=#{pid} and allow=1
        order by modified desc
        limit #{start},10;
    </select>
    <select id="selectByUid" resultMap="BaseResultMap">
        select
        <include refid="all"/>
        from
        <include refid="table"/>
        where uid =#{uid} and allow=1
        order by modified DESC
        limit #{start},10
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from
        <include refid="table"/>
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.wsk.life.domain.CommentCritic">
        insert into
        <include refid="table"/>
        (id, good, pid,
        time, uid, modified,
        allow, critic)
        values (#{id,jdbcType=INTEGER}, #{good,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER},
        #{time,jdbcType=TIMESTAMP}, #{uid,jdbcType=INTEGER}, #{modified,jdbcType=TIMESTAMP},
        #{allow,jdbcType=SMALLINT}, #{critic,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.wsk.life.domain.CommentCritic">
        insert into
        <include refid="table"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="good != null">
                good,
            </if>
            <if test="pid != null">
                pid,
            </if>
            <if test="time != null">
                time,
            </if>
            <if test="uid != null">
                uid,
            </if>
            <if test="modified != null">
                modified,
            </if>
            <if test="allow != null">
                allow,
            </if>
            <if test="critic != null">
                critic,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="good != null">
                #{good,jdbcType=INTEGER},
            </if>
            <if test="pid != null">
                #{pid,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=INTEGER},
            </if>
            <if test="modified != null">
                #{modified,jdbcType=TIMESTAMP},
            </if>
            <if test="allow != null">
                #{allow,jdbcType=SMALLINT},
            </if>
            <if test="critic != null">
                #{critic,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.wsk.life.domain.CommentCritic">
        update
        <include refid="table"/>
        <set>
            <if test="good != null">
                good = #{good,jdbcType=INTEGER},
            </if>
            <if test="pid != null">
                pid = #{pid,jdbcType=INTEGER},
            </if>
            <if test="time != null">
                time = #{time,jdbcType=TIMESTAMP},
            </if>
            <if test="uid != null">
                uid = #{uid,jdbcType=INTEGER},
            </if>
            <if test="modified != null">
                modified = #{modified,jdbcType=TIMESTAMP},
            </if>
            <if test="allow != null">
                allow = #{allow,jdbcType=SMALLINT},
            </if>
            <if test="critic != null">
                critic = #{critic,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.wsk.life.domain.CommentCritic">
        update
        <include refid="table"/>
        set good = #{good,jdbcType=INTEGER},
        pid = #{pid,jdbcType=INTEGER},
        time = #{time,jdbcType=TIMESTAMP},
        uid = #{uid,jdbcType=INTEGER},
        modified = #{modified,jdbcType=TIMESTAMP},
        allow = #{allow,jdbcType=SMALLINT},
        critic = #{critic,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.wsk.life.domain.CommentCritic">
        update
        <include refid="table"/>
        set good = #{good,jdbcType=INTEGER},
        pid = #{pid,jdbcType=INTEGER},
        time = #{time,jdbcType=TIMESTAMP},
        uid = #{uid,jdbcType=INTEGER},
        modified = #{modified,jdbcType=TIMESTAMP},
        allow = #{allow,jdbcType=SMALLINT}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>